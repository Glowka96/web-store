version: "3.8"

services:
  frontend:
    build: ./WebStoreAngular
    ports:
        - "4200:80"
    depends_on:
        - backend
    restart: always
    networks:
      - frontend-backend-network

  backend:
    depends_on:
      mysqldb:
        condition: service_healthy
    build: ./WebStoreSpring
    restart: on-failure
    env_file: .env
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
    networks:
      - frontend-backend-network
      - backend-db-network
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'

  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    command: --explicit_defaults_for_timestamp=1
    volumes:
      - db:/var/lib/mysql
    networks:
      - backend-db-network
    healthcheck:
      test: "mysql -u$MYSQLDB_USER -p$MYSQLDB_PASSWORD $MYSQLDB_DATABASE -e 'select 1'"
      interval: 30s
      retries: 5
      timeout: 30s
      start_period: 5s

volumes:
  db:

networks:
  frontend-backend-network:
    driver: bridge
  backend-db-network:
    driver: bridge
